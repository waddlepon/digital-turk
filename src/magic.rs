const KNIGHT_MOVES: [u64; 64] =
[9077567998918656, 4679521487814656, 38368557762871296, 19184278881435648, 9592139440717824,
4796069720358912, 2257297371824128, 1128098930098176, 2305878468463689728, 1152939783987658752,
9799982666336960512, 4899991333168480256, 2449995666584240128, 1224997833292120064,
576469569871282176, 288234782788157440, 4620693356194824192, 11533718717099671552,
5802888705324613632, 2901444352662306816, 1450722176331153408, 725361088165576704,
362539804446949376, 145241105196122112, 18049583422636032, 45053588738670592, 22667534005174272,
11333767002587136, 5666883501293568, 2833441750646784, 1416171111120896, 567348067172352,
70506185244672, 175990581010432, 88545054707712, 44272527353856, 22136263676928, 11068131838464,
5531918402816, 2216203387392, 275414786112, 687463207072, 345879119952, 172939559976, 86469779988,
43234889994, 21609056261, 8657044482, 1075839008, 2685403152, 1351090312, 675545156, 337772578,
168886289, 84410376, 33816580, 4202496, 10489856, 5277696, 2638848, 1319424, 659712, 329728, 132096,];

//only used to gen for hardcoded moves
pub fn gen_knight_moves() {
    let move_set = vec![(2,1), (1,2), (-2,-1), (-1,-2), (-2,1), (-1,2), (2,-1), (1,-2)];
    for i in (0..64).rev() { 
        let mut moves: u64 = 0;
        let file = i % 8;
        let rank = 7 - ((i - file) / 8);

        for &(x, y) in &move_set {
            if file + x >= 0 && file + x < 8 && rank + y >= 0 && rank + y < 8 {
                moves |= 1 << ((7 - (rank + y)) * 8 + file + x);
            }
        }
        println!("{},", moves);
    }
}
